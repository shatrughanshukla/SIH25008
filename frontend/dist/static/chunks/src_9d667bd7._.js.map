{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/components/DashboardHeader.jsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  ShieldAlert,\r\n  MessageSquare,\r\n  Clapperboard,\r\n  Trophy,\r\n  Info,\r\n  UserRound,\r\n  ChevronDown,\r\n  User,\r\n  Settings,\r\n  LogOut,\r\n  Phone,\r\n} from 'lucide-react';\r\n\r\nimport {useAuth} from \"../context/AuthContext\";\r\n\r\nconst HELPLINES = [\r\n  { service: 'General Emergency (all services)', numbers: ['112'] },\r\n  { service: 'Police', numbers: ['100'] },\r\n  { service: 'Fire Service', numbers: ['101'] },\r\n  { service: 'Ambulance', numbers: ['102'] },\r\n  { service: 'NDMA (National Disaster Mgmt Auth)', numbers: ['1078', '011-26701728'] },\r\n  { service: 'NDRF (National Disaster Response F)', numbers: ['011-24363260', '9711077372'] },\r\n  { service: 'Relief Commissioner for Natural Calamities', numbers: ['1070'] },\r\n  { service: 'Medical State Helplines', numbers: ['108'] },\r\n  { service: 'Children Helpline', numbers: ['1098'] },\r\n  { service: 'Women Helpline', numbers: ['1091', '181'] },\r\n  { service: 'Missing Children & Women’s Affairs', numbers: ['1094'] },\r\n  { service: 'SOS to Earthquake/Flood/Disaster', numbers: ['1092'] },\r\n];\r\n\r\nconst DashboardHeader = () => {\r\n  const [profileOpen, setProfileOpen] = useState(false);\r\n  const [helpOpen, setHelpOpen] = useState(false);\r\n  const {logout} = useAuth();\r\n\r\n  const profileMenuRef = useRef(null);\r\n  const profileBtnRef = useRef(null);\r\n  const helpMenuRef = useRef(null);\r\n  const helpBtnRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    function onClickOutside(e) {\r\n      const t = e.target;\r\n      const clickedProfile =\r\n        profileMenuRef.current?.contains(t) || profileBtnRef.current?.contains(t);\r\n      const clickedHelp =\r\n        helpMenuRef.current?.contains(t) || helpBtnRef.current?.contains(t);\r\n\r\n      if (!clickedProfile) setProfileOpen(false);\r\n      if (!clickedHelp) setHelpOpen(false);\r\n    }\r\n    function onEsc(e) {\r\n      if (e.key === 'Escape') {\r\n        setProfileOpen(false);\r\n        setHelpOpen(false);\r\n      }\r\n    }\r\n    document.addEventListener('mousedown', onClickOutside);\r\n    document.addEventListener('keydown', onEsc);\r\n    return () => {\r\n      document.removeEventListener('mousedown', onClickOutside);\r\n      document.removeEventListener('keydown', onEsc);\r\n    };\r\n  }, []);\r\n\r\n  const navLink =\r\n    'text-white hover:bg-blue-600 hover:bg-opacity-75 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 inline-flex items-center gap-2';\r\n\r\n  const telHref = (num) => `tel:${num.replace(/\\s+/g, '')}`;\r\n\r\n  return (\r\n    <nav className=\"bg-gradient-to-r from-blue-700 to-indigo-800 shadow-lg sticky top-0 z-50\">\r\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex justify-between items-center h-16\">\r\n          {/* Logo */}\r\n          <div className=\"flex items-center\">\r\n            <a href=\"/dashboard/student\" className=\"flex items-center gap-2\">\r\n              <ShieldAlert className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\r\n              <span className=\"text-white font-bold text-xl tracking-tight\">\r\n                Disaster Dashboard\r\n              </span>\r\n            </a>\r\n          </div>\r\n\r\n          {/* Nav links (desktop) */}\r\n          <div className=\"hidden md:flex items-center space-x-4\">\r\n            <a href=\"/dashboard/chatbot\" className={navLink}>\r\n              <MessageSquare className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n              Chatbot\r\n            </a>\r\n            <a href=\"/dashboard/student/reels\" className={navLink}>\r\n              <Clapperboard className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n              Shorts\r\n            </a>\r\n            <a href=\"/dashboard/student/leaderboard\" className={navLink}>\r\n              <Trophy className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n              LeaderBoard\r\n            </a>\r\n\r\n            {/* Emergency Contact dropdown */}\r\n            <div className=\"relative\" ref={helpMenuRef}>\r\n              <button\r\n                ref={helpBtnRef}\r\n                onClick={() => {\r\n                  setHelpOpen((v) => !v);\r\n                  setProfileOpen(false);\r\n                }}\r\n                className=\"flex items-center gap-2 text-white bg-white/0 hover:bg-blue-600 hover:bg-opacity-75 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200\"\r\n                aria-haspopup=\"menu\"\r\n                aria-expanded={helpOpen}\r\n              >\r\n                <Phone className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n                Emergency Contact\r\n                <ChevronDown\r\n                  className={`h-4 w-4 transition-transform ${helpOpen ? 'rotate-180' : ''}`}\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </button>\r\n\r\n              {helpOpen && (\r\n                <div\r\n                  role=\"menu\"\r\n                  aria-label=\"Emergency contacts\"\r\n                  className=\"absolute right-0 mt-2 w-[26rem] max-w-[90vw] origin-top-right rounded-md bg-white shadow-xl ring-1 ring-black/5 focus:outline-none overflow-hidden\"\r\n                >\r\n                  {/* Header - tighter padding */}\r\n                  <div className=\"px-3 py-2 bg-gray-50 border-b text-sm font-semibold text-gray-700\">\r\n                    🇮🇳 Emergency & Disaster Helplines\r\n                  </div>\r\n\r\n                  {/* List */}\r\n                  <div className=\"max-h-96 overflow-y-auto\">\r\n                    <ul className=\"divide-y\">\r\n                      {HELPLINES.map((h, idx) => {\r\n                        const firstFour = idx < 4;\r\n                        return (\r\n                          <li key={h.service} className=\"px-3 py-2\">\r\n                            {firstFour ? (\r\n                              // Compact single-row layout for first 4 items\r\n                              <div className=\"flex items-center justify-between gap-3\">\r\n                                <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                                  {h.service}\r\n                                </div>\r\n                                <div className=\"flex flex-wrap items-center gap-1.5 justify-end\">\r\n                                  {h.numbers.map((n) => (\r\n                                    <a\r\n                                      key={n}\r\n                                      href={telHref(n)}\r\n                                      className=\"inline-flex items-center rounded-md border border-gray-200 px-1.5 py-[2px] text-[11px] font-mono text-blue-800 hover:bg-blue-100 bg-blue-50\"\r\n                                      title={`Call ${n}`}\r\n                                    >\r\n                                      {n}\r\n                                    </a>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            ) : (\r\n                              // Default stacked layout for the rest\r\n                              <>\r\n                                <div className=\"text-sm font-medium text-gray-900\">\r\n                                  {h.service}\r\n                                </div>\r\n                                <div className=\"mt-1 flex flex-wrap gap-1.5\">\r\n                                  {h.numbers.map((n) => (\r\n                                    <a\r\n                                      key={n}\r\n                                      href={telHref(n)}\r\n                                      className=\"inline-flex items-center rounded-md border border-gray-200 px-1.5 py-[2px] text-[11px] font-mono text-blue-800 hover:bg-blue-100 bg-blue-50\"\r\n                                      title={`Call ${n}`}\r\n                                    >\r\n                                      {n}\r\n                                    </a>\r\n                                  ))}\r\n                                </div>\r\n                              </>\r\n                            )}\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <a href=\"/dashboard/about\" className={navLink}>\r\n              <Info className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n              About\r\n            </a>\r\n\r\n            {/* Profile dropdown */}\r\n            <div className=\"relative\" ref={profileMenuRef}>\r\n              <button\r\n                ref={profileBtnRef}\r\n                onClick={() => {\r\n                  setProfileOpen((v) => !v);\r\n                  setHelpOpen(false);\r\n                }}\r\n                className=\"flex items-center gap-2 text-white bg-white/0 hover:bg-blue-600 hover:bg-opacity-75 px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200\"\r\n                aria-haspopup=\"menu\"\r\n                aria-expanded={profileOpen}\r\n              >\r\n                <UserRound className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\r\n                <span>Profile</span>\r\n                <ChevronDown\r\n                  className={`h-4 w-4 transition-transform ${profileOpen ? 'rotate-180' : ''}`}\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </button>\r\n\r\n              {profileOpen && (\r\n                <div\r\n                  role=\"menu\"\r\n                  aria-label=\"Profile menu\"\r\n                  className=\"absolute right-0 mt-2 w-52 origin-top-right rounded-md bg-white shadow-xl ring-1 ring-black/5 focus:outline-none overflow-hidden\"\r\n                >\r\n                  <a\r\n                    href=\"/profile\"\r\n                    role=\"menuitem\"\r\n                    className=\"flex items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\r\n                    onClick={() => setProfileOpen(false)}\r\n                  >\r\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n                    My Account\r\n                  </a>\r\n                  <a\r\n                    href=\"/dashboard/settings\"\r\n                    role=\"menuitem\"\r\n                    className=\"flex items-center gap-2 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50\"\r\n                    onClick={() => setProfileOpen(false)}\r\n                  >\r\n                    <Settings className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n                    Settings\r\n                  </a>\r\n                  <div className=\"h-px bg-gray-200\" />\r\n                  <button\r\n                    onClick={logout}\r\n                    type=\"button\"\r\n                    role=\"menuitem\"\r\n                    className=\"w-full text-left flex items-center gap-2 px-4 py-2 text-sm text-red-600 hover:bg-gray-50\"\r\n                  >\r\n                    <LogOut className=\"h-4 w-4\" aria-hidden=\"true\" />\r\n                    Logout\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* (Optional) Mobile: add a hamburger later if needed */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default DashboardHeader;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/components/ClientOnly.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\n/**\r\n * A wrapper component that only renders its children on the client side\r\n * This prevents hydration mismatches for components that use browser-only APIs\r\n * or need to display dynamic content that differs between server and client\r\n * \r\n * @param {Object} props - Component props\r\n * @param {React.ReactNode} props.children - The content to render client-side only\r\n * @param {React.ReactNode} props.fallback - Optional fallback to show during SSR (default: null)\r\n */\r\nexport default function ClientOnly({ children, fallback = null }) {\r\n  const [isClient, setIsClient] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  // On the server or during initial hydration, render fallback (or nothing)\r\n  if (!isClient) {\r\n    return fallback;\r\n  }\r\n\r\n  // On the client, render children normally\r\n  return children;\r\n}"],"names":[],"mappings":";;;;AAEA;;AAFA;;AAae,SAAS,WAAW,KAA6B;QAA7B,EAAE,QAAQ,EAAE,WAAW,IAAI,EAAE,GAA7B;;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IAEzC,IAAA,0KAAS;gCAAC;YACR,YAAY;QACd;+BAAG,EAAE;IAEL,0EAA0E;IAC1E,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IAEA,0CAA0C;IAC1C,OAAO;AACT;GAdwB;KAAA","debugId":null}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/lib/dateUtils.js"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\n\r\n/**\r\n * Utility functions for consistent date and time formatting across the application\r\n * Designed to prevent hydration mismatches between server and client rendering\r\n */\r\n\r\n/**\r\n * Format a date to a consistent locale string\r\n * @param {Date|string|number} date - Date object, ISO string, or timestamp\r\n * @returns {string} Formatted date string\r\n */\r\nexport function formatDate(date) {\r\n  // Use a consistent locale and format options\r\n  const options = { \r\n    year: 'numeric', \r\n    month: 'short', \r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  };\r\n  return formatWithOptions(date, options);\r\n}\r\n\r\n/**\r\n * Format a date to show only time\r\n * @param {Date|string|number} date - Date object, ISO string, or timestamp\r\n * @returns {string} Formatted time string\r\n */\r\nexport function formatTime(date) {\r\n  // Use a consistent locale and format options for time only\r\n  const options = { \r\n    hour: '2-digit', \r\n    minute: '2-digit',\r\n    hour12: true\r\n  };\r\n  return formatWithOptions(date, options).toUpperCase(); // Ensure consistent casing\r\n}\r\n\r\n/**\r\n * Format a date with specific options\r\n * @param {Date|string|number} date - Date object, ISO string, or timestamp\r\n * @param {Object} options - Intl.DateTimeFormat options\r\n * @returns {string} Formatted date string\r\n */\r\nexport function formatWithOptions(date, options) {\r\n  if (!date) return '—';\r\n  \r\n  try {\r\n    // Ensure we have a Date object\r\n    const dateObj = date instanceof Date ? date : new Date(date);\r\n    // Use a consistent locale\r\n    return dateObj.toLocaleString('en-US', options);\r\n  } catch (error) {\r\n    console.error('Error formatting date:', error);\r\n    return '—';\r\n  }\r\n}\r\n\r\n/**\r\n * Client-side only component for displaying the current time\r\n * Use this component when you need to display the current time\r\n * and want to avoid hydration mismatches\r\n */\r\nexport function ClientTime({ format = 'time' }) {\r\n  const [formattedTime, setFormattedTime] = React.useState('—');\r\n  \r\n  React.useEffect(() => {\r\n    // Update on mount\r\n    updateTime();\r\n    \r\n    // Set up interval to update time\r\n    const intervalId = setInterval(updateTime, 60000); // Update every minute\r\n    \r\n    // Clean up interval\r\n    return () => clearInterval(intervalId);\r\n    \r\n    function updateTime() {\r\n      const now = new Date();\r\n      if (format === 'time') {\r\n        setFormattedTime(formatTime(now));\r\n      } else if (format === 'date') {\r\n        setFormattedTime(formatDate(now));\r\n      } else {\r\n        setFormattedTime(formatWithOptions(now, format));\r\n      }\r\n    }\r\n  }, [format]);\r\n  \r\n  return formattedTime;\r\n}"],"names":[],"mappings":";;;;;;;;;;AAEA;;AAFA;;AAcO,SAAS,WAAW,IAAI;IAC7B,6CAA6C;IAC7C,MAAM,UAAU;QACd,MAAM;QACN,OAAO;QACP,KAAK;QACL,MAAM;QACN,QAAQ;IACV;IACA,OAAO,kBAAkB,MAAM;AACjC;AAOO,SAAS,WAAW,IAAI;IAC7B,2DAA2D;IAC3D,MAAM,UAAU;QACd,MAAM;QACN,QAAQ;QACR,QAAQ;IACV;IACA,OAAO,kBAAkB,MAAM,SAAS,WAAW,IAAI,2BAA2B;AACpF;AAQO,SAAS,kBAAkB,IAAI,EAAE,OAAO;IAC7C,IAAI,CAAC,MAAM,OAAO;IAElB,IAAI;QACF,+BAA+B;QAC/B,MAAM,UAAU,gBAAgB,OAAO,OAAO,IAAI,KAAK;QACvD,0BAA0B;QAC1B,OAAO,QAAQ,cAAc,CAAC,SAAS;IACzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;IACT;AACF;AAOO,SAAS,WAAW,KAAmB;QAAnB,EAAE,SAAS,MAAM,EAAE,GAAnB;;IACzB,MAAM,CAAC,eAAe,iBAAiB,GAAG,wKAAK,CAAC,QAAQ,CAAC;IAEzD,wKAAK,CAAC,SAAS;gCAAC;YACd,kBAAkB;YAClB;YAEA,iCAAiC;YACjC,MAAM,aAAa,YAAY,YAAY,QAAQ,sBAAsB;YAEzE,oBAAoB;YACpB;wCAAO,IAAM,cAAc;;;;YAE3B,SAAS;gBACP,MAAM,MAAM,IAAI;gBAChB,IAAI,WAAW,QAAQ;oBACrB,iBAAiB,WAAW;gBAC9B,OAAO,IAAI,WAAW,QAAQ;oBAC5B,iBAAiB,WAAW;gBAC9B,OAAO;oBACL,iBAAiB,kBAAkB,KAAK;gBAC1C;YACF;QACF;+BAAG;QAAC;KAAO;IAEX,OAAO;AACT;GA1BgB;KAAA","debugId":null}},
    {"offset": {"line": 704, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/components/FormattedTime.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport ClientOnly from './ClientOnly';\r\nimport { formatTime, formatDate } from '../lib/dateUtils';\r\n\r\n/**\r\n * A component for displaying formatted time with proper hydration handling\r\n * Renders a placeholder during SSR and updates with the correct time on the client\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string|Date} props.time - The time to format (ISO string, timestamp, or Date object)\r\n * @param {string} props.format - Format to use: 'time' or 'date' (default: 'time')\r\n * @param {string} props.className - Optional CSS class name\r\n */\r\nexport default function FormattedTime({ time, format = 'time', className = '' }) {\r\n  // Use a placeholder for SSR to avoid hydration mismatch\r\n  const [formattedValue, setFormattedValue] = useState('—');\r\n  \r\n  useEffect(() => {\r\n    // Update the formatted value on the client side only\r\n    if (time) {\r\n      try {\r\n        if (format === 'time') {\r\n          setFormattedValue(formatTime(time));\r\n        } else if (format === 'date') {\r\n          setFormattedValue(formatDate(time));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error formatting time:', error);\r\n        setFormattedValue('—');\r\n      }\r\n    }\r\n  }, [time, format]);\r\n  \r\n  return (\r\n    <ClientOnly fallback={<span className={className}>—</span>}>\r\n      <span className={className}>{formattedValue}</span>\r\n    </ClientOnly>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAee,SAAS,cAAc,KAAyC;QAAzC,EAAE,IAAI,EAAE,SAAS,MAAM,EAAE,YAAY,EAAE,EAAE,GAAzC;;IACpC,wDAAwD;IACxD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,yKAAQ,EAAC;IAErD,IAAA,0KAAS;mCAAC;YACR,qDAAqD;YACrD,IAAI,MAAM;gBACR,IAAI;oBACF,IAAI,WAAW,QAAQ;wBACrB,kBAAkB,IAAA,wIAAU,EAAC;oBAC/B,OAAO,IAAI,WAAW,QAAQ;wBAC5B,kBAAkB,IAAA,wIAAU,EAAC;oBAC/B;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,0BAA0B;oBACxC,kBAAkB;gBACpB;YACF;QACF;kCAAG;QAAC;QAAM;KAAO;IAEjB,qBACE,6LAAC,8IAAU;QAAC,wBAAU,6LAAC;YAAK,WAAW;sBAAW;;;;;;kBAChD,cAAA,6LAAC;YAAK,WAAW;sBAAY;;;;;;;;;;;AAGnC;GAzBwB;KAAA","debugId":null}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/dashboard/chatbot/page.jsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport DashboardHeader from '../../components/DashboardHeader'; // <- adjust path if different\r\nimport { FiSend } from 'react-icons/fi';\r\nimport { FaRobot } from 'react-icons/fa';\r\nimport FormattedTime from '../../../components/FormattedTime';\r\nimport { formatTime } from '../../../lib/dateUtils';\r\n\r\n// Replace this backend URL with an env var if you deploy / proxy it later\r\nconst BACKEND_CHAT_URL = 'http://127.0.0.1:5001/chat';\r\n\r\nexport default function Page() {\r\n  return (\r\n    <>\r\n      <DashboardHeader />\r\n\r\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50 p-4 sm:p-6 lg:p-8\">\r\n        <div className=\"max-w-7xl mx-auto space-y-6\">\r\n          <Chatbot />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      sender: 'bot',\r\n      text: `Welcome to DisasterReady!\\n\\nAsk me anything about emergency planning, safety procedures, first aid, evacuation protocols and more. Here are some quick suggestions to get started.`,\r\n      time: new Date().toISOString(),\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [apiStatus, setApiStatus] = useState('connected');\r\n  const endRef = useRef(null);\r\n\r\n  const quickSuggestions = [\r\n    'What should be in an emergency kit?',\r\n    'How to prepare for an earthquake?',\r\n    'What to do during a flood?',\r\n    'How to create a family emergency plan?'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // auto-scroll\r\n    endRef.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n  }, [messages, isTyping]);\r\n\r\n  async function sendToBot(text) {\r\n    if (!text || !text.trim()) return;\r\n\r\n    // add user message\r\n    setMessages(prev => [...prev, { sender: 'user', text: text.trim(), time: new Date().toISOString() }]);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      const res = await fetch(BACKEND_CHAT_URL, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: text.trim() }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        setApiStatus('error');\r\n        setMessages(prev => [...prev, { sender: 'bot', text: '⚠️ Server error — please try again later.', time: new Date().toISOString() }]);\r\n        setIsTyping(false);\r\n        return;\r\n      }\r\n\r\n      const data = await res.json();\r\n      const botText = (data && data.response) ? data.response : (data.error ? `Error: ${data.error}` : 'No response from server');\r\n      setApiStatus('connected');\r\n      setMessages(prev => [...prev, { sender: 'bot', text: botText, time: new Date().toISOString() }]);\r\n    } catch (err) {\r\n      console.error('Chat error', err);\r\n      setApiStatus('error');\r\n      setMessages(prev => [...prev, { sender: 'bot', text: '⚠️ Error connecting to server', time: new Date().toISOString() }]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  }\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n    sendToBot(input);\r\n  }\r\n\r\n  // --- Formatting function: turns simple markdown-ish text into safe-ish HTML ---\r\n  function escapeHTML(s = '') {\r\n    return s\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;');\r\n  }\r\n\r\n  function formatBotResponse(rawText = '') {\r\n    // 1) escape\r\n    let t = escapeHTML(String(rawText));\r\n\r\n    // 2) inline formatting\r\n    t = t.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>'); // bold\r\n    t = t.replace(/\\*(.*?)\\*/g, '<em>$1</em>'); // italic\r\n\r\n    // 3) headings (lines starting with #)\r\n    t = t.replace(/^### (.*)$/gm, '<h4 class=\"text-md font-semibold mt-2\">$1</h4>');\r\n    t = t.replace(/^## (.*)$/gm, '<h3 class=\"text-lg font-semibold mt-2\">$1</h3>');\r\n    t = t.replace(/^# (.*)$/gm, '<h2 class=\"text-xl font-bold mt-2\">$1</h2>');\r\n\r\n    // 4) numbered lists groups\r\n    t = t.replace(/(^|\\n)((?:\\d+\\.\\s.*(?:\\n|$))+)/g, (m, p1, p2) => {\r\n      const items = p2.trim().split(/\\n+/).map(line => line.replace(/^\\d+\\.\\s*/, '').trim());\r\n      return p1 + '<ol class=\"list-decimal list-inside my-2\">' + items.map(it => `<li class=\"mb-1\">${it}</li>`).join('') + '</ol>';\r\n    });\r\n\r\n    // 5) bullet list groups (- or •)\r\n    t = t.replace(/(^|\\n)((?:[-•]\\s.*(?:\\n|$))+)/g, (m, p1, p2) => {\r\n      const items = p2.trim().split(/\\n+/).map(line => line.replace(/^[-•]\\s*/, '').trim());\r\n      return p1 + '<ul class=\"list-disc list-inside my-2\">' + items.map(it => `<li class=\"mb-1\">${it}</li>`).join('') + '</ul>';\r\n    });\r\n\r\n    // 6) paragraphs: split by two or more newlines and wrap blocks that are not already lists/headings\r\n    const blocks = t.split(/\\n{2,}/).map(b => b.trim()).filter(Boolean);\r\n    const wrapped = blocks.map(b => {\r\n      if (/^<h|^<ul|^<ol|^<pre|^<blockquote/.test(b)) return b; // already a block\r\n      // single-line -> keep <br> for remaining single newlines\r\n      return '<p class=\"mb-2 text-sm leading-relaxed\">' + b.replace(/\\n/g, '<br>') + '</p>';\r\n    }).join('');\r\n\r\n    return wrapped;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-transparent\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-12 gap-6\">\r\n        {/* Sidebar (left) */}\r\n        <aside className=\"md:col-span-3 hidden md:block\">\r\n          <div className=\"bg-white rounded-xl shadow p-4\">\r\n            <h3 className=\"text-blue-600 font-semibold mb-3\">Learning Topics</h3>\r\n            <ul className=\"space-y-2 text-sm\">\r\n              <li className=\"text-black px-3 py-2 bg-blue-50 rounded hover:bg-blue-100 cursor-pointer\">Natural Disasters Overview</li>\r\n              <li className=\"text-black px-3 py-2 bg-blue-50 rounded hover:bg-blue-100 cursor-pointer\">Earthquake Preparedness</li>\r\n              <li className=\"text-black px-3 py-2 bg-blue-50 rounded hover:bg-blue-100 cursor-pointer\">Flood Safety Measures</li>\r\n              <li className=\"text-black px-3 py-2 bg-blue-50 rounded hover:bg-blue-100 cursor-pointer\">Cyclone & Hurricane Prep</li>\r\n              <li className=\"text-black px-3 py-2 bg-blue-50 rounded hover:bg-blue-100 cursor-pointer\">First Aid Basics</li>\r\n            </ul>\r\n\r\n            <div className=\"mt-4\">\r\n              <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Resources</h4>\r\n              <a className=\"block text-sm text-blue-600 hover:underline\">Download Guide (PDF)</a>\r\n              <a className=\"block text-sm text-blue-600 hover:underline mt-1\">Interactive Simulations</a>\r\n            </div>\r\n          </div>\r\n        </aside>\r\n\r\n        {/* Chat area (center) */}\r\n        <section className=\"md:col-span-6 col-span-1 flex flex-col\">\r\n          <div className=\"bg-white rounded-xl shadow overflow-hidden flex flex-col h-[85vh]\">\r\n            <div className=\"flex items-center gap-3 px-4 py-3 bg-gradient-to-r from-blue-600 to-blue-800 text-white\">\r\n              <FaRobot />\r\n              <div>\r\n                <div className=\"font-semibold\">Disaster Management Assistant</div>\r\n                <div className=\"text-xs opacity-90\">Ask anything about preparedness, response and recovery</div>\r\n              </div>\r\n              <div className=\"ml-auto text-xs px-2 py-1 rounded bg-white/10\">API: {apiStatus === 'connected' ? <span>Connected</span> : <span className=\"text-yellow-200\">Error</span>}</div>\r\n            </div>\r\n\r\n            <div className=\"flex-1 p-4 overflow-y-auto space-y-4\" id=\"chat-window\">\r\n              {messages.map((m, idx) => (\r\n                <div key={idx} className={`${m.sender === 'user' ? 'justify-end flex' : 'justify-start flex'}`}>\r\n                  <div className={`${m.sender === 'user' ? 'bg-blue-600 text-white rounded-bl-2xl rounded-tl-xl rounded-tr-2xl' : 'bg-gray-100 text-gray-900 rounded-br-2xl rounded-tr-xl rounded-tl-2xl'} max-w-[80%] px-4 py-2`}>\r\n                    {m.sender === 'bot' ? (\r\n                      <div className=\"prose-sm\" dangerouslySetInnerHTML={{ __html: formatBotResponse(m.text) }} />\r\n                    ) : (\r\n                      <div className=\"whitespace-pre-wrap text-sm\">{m.text}</div>\r\n                    )}\r\n                    <div className=\"text-[10px] mt-1 opacity-60 text-right\"><FormattedTime time={m.time} format=\"time\" /></div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              {isTyping && (\r\n                <div className=\"flex justify-start\">\r\n                  <div className=\"bg-gray-100 text-gray-900 rounded-br-2xl rounded-tr-xl rounded-tl-2xl px-4 py-2\">\r\n                    <div className=\"text-sm italic opacity-80\">Assistant is typing...</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div ref={endRef} />\r\n            </div>\r\n\r\n            {/* Quick suggestions */}\r\n            <div className=\"p-3 border-t bg-white flex flex-col gap-3\">\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {quickSuggestions.map((q, i) => (\r\n                  <button\r\n                    key={i}\r\n                    onClick={() => sendToBot(q)}\r\n                    className=\"text-sm px-3 py-1.5 bg-white border rounded-full shadow-sm hover:bg-blue-50 text-gray-800\"\r\n                  >\r\n                    {q}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Input area */}\r\n              <form onSubmit={onSubmit} className=\"flex gap-2\">\r\n                <input\r\n                  value={input}\r\n                  onChange={(e) => setInput(e.target.value)}\r\n                  placeholder=\"Type your question here...\"\r\n                  className=\"flex-1 border rounded-full px-4 py-2 text-sm outline-none text-gray-800\"\r\n                />\r\n                <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded-full shadow\">\r\n                  <FiSend />\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Right column: extras / resources */}\r\n        <aside className=\"md:col-span-3 hidden md:block\">\r\n          <div className=\"bg-white rounded-xl shadow p-4\">\r\n            <h4 className=\"font-semibold text-gray-800\">Helpful Links</h4>\r\n            <ul className=\"mt-2 text-sm space-y-2\">\r\n              <li className=\"text-blue-600 hover:underline cursor-pointer\">Emergency Procedures Guide</li>\r\n              <li className=\"text-blue-600 hover:underline cursor-pointer\">Video Tutorials</li>\r\n              <li className=\"text-blue-600 hover:underline cursor-pointer\">Interactive Simulations</li>\r\n            </ul>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}