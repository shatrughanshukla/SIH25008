{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/auth/success/page.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useToast } from '@/app/context/ToastContext';\nimport Image from 'next/image';\n\nexport default function AuthSuccess() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const toast = useToast();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [isClient, setIsClient] = useState(false);\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [checkingUsername, setCheckingUsername] = useState(false);\n  const [userData, setUserData] = useState(null);\n  \n  // Refs to track state and prevent duplicate operations\n  const hasShownToast = useRef(false);\n  const hasProcessedAuth = useRef(false);\n  const redirectTimer = useRef(null);\n  const errorRedirectTimer = useRef(null);\n  \n  // Set isClient to true once component mounts (client-side only)\n  useEffect(() => {\n    setIsClient(true);\n    \n    // Pre-fill username field with a suggestion if we have user data\n    if (userData && userData.name && isNewUser) {\n      // Create a username suggestion based on their name\n      const nameParts = userData.name.toLowerCase().split(' ');\n      const suggestedUsername = nameParts[0] + (nameParts.length > 1 ? '_' + nameParts[1] : '');\n      // Remove any special characters\n      const cleanUsername = suggestedUsername.replace(/[^a-z0-9_]/g, '');\n      setUsername(cleanUsername);\n    }\n  }, [userData, isNewUser]);\n  \n  // Display initial success message only once\n  useEffect(() => {\n    if (isClient && !hasShownToast.current) {\n      toast.showSuccessToast('Login successful! Redirecting to dashboard...');\n      hasShownToast.current = true;\n    }\n  }, [isClient, toast]);\n\n  // Define completeAuthentication function outside of the useEffect\n  const completeAuthentication = useCallback((userDataResponse) => {\n    // Get token and userId from URL params\n    const token = searchParams.get('token');\n    const userId = searchParams.get('userId');\n    \n    if (!token || !userId) {\n      handleAuthError('Missing token or user ID');\n      return;\n    }\n    \n    try {\n      // Create user object with token and user data\n      const user = {\n        _id: userId,\n        name: userDataResponse.name,\n        email: userDataResponse.email,\n        username: userDataResponse.username,\n        role: userDataResponse.role || 'student', // Default to student if role is missing\n        profilePic: userDataResponse.profilePic, // Include profile picture\n        token: token\n      };\n\n      console.log('Saving user to localStorage:', user);\n      // Save user to localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      // Store token separately in localStorage\n      localStorage.setItem('token', token);\n      \n      // Mark this auth process as completed\n      sessionStorage.setItem(`auth_processed_${userId}`, 'true');\n      \n      // Show success message (only if we haven't already)\n      if (!hasShownToast.current) {\n        toast.showSuccessToast('Successfully logged in with Google!');\n        hasShownToast.current = true;\n      }\n      \n      setLoading(false);\n      \n      // Redirect based on user role\n      const redirectPath = userDataResponse.role === 'teacher' ? '/dashboard/teacher' : '/dashboard/student';\n      console.log('Redirecting to:', redirectPath);\n      \n      // Add a small delay before redirecting to ensure localStorage is updated\n      redirectTimer.current = setTimeout(() => {\n        router.push(redirectPath);\n      }, 1500);\n    } catch (error) {\n      console.error('Error completing authentication:', error);\n      handleAuthError('Failed to complete authentication');\n    }\n  }, [searchParams, router, toast]);\n  \n  // Define handleAuthError function outside of the useEffect\n  const handleAuthError = useCallback((errorMessage) => {\n    setError(errorMessage || 'Authentication failed');\n    setLoading(false);\n    toast.showErrorToast(`Authentication error: ${errorMessage || 'Authentication failed'}`);\n    // Clear the auth processed flag on error\n    sessionStorage.removeItem('auth_processed');\n    errorRedirectTimer.current = setTimeout(() => {\n      router.push('/login');\n    }, 3000);\n  }, [router, toast]);\n\n  // Main authentication logic\n  useEffect(() => {\n    // Only run on client-side\n    if (!isClient) return;\n    \n    // Get token and userId from URL params\n    const token = searchParams.get('token');\n    const userId = searchParams.get('userId');\n\n    console.log('Auth Success Page - Token:', token ? 'Present' : 'Missing');\n    console.log('Auth Success Page - UserId:', userId ? 'Present' : 'Missing');\n\n    // Prevent processing more than once\n    if (hasProcessedAuth.current) return;\n    \n    // Check if we've already processed this login in a previous session\n    const hasProcessed = sessionStorage.getItem('auth_processed');\n    \n    if (hasProcessed) {\n      console.log('Auth already processed, redirecting to dashboard');\n      const storedUser = localStorage.getItem('user');\n      if (storedUser) {\n        try {\n          const user = JSON.parse(storedUser);\n          const redirectPath = user.role === 'teacher' ? '/dashboard/teacher' : '/dashboard/student';\n          router.push(redirectPath);\n        } catch (e) {\n          console.error('Error parsing stored user:', e);\n          router.push('/login');\n        }\n      } else {\n        router.push('/dashboard');\n      }\n      return;\n    }\n    \n    // Mark that we've started processing this authentication\n    hasProcessedAuth.current = true;\n    \n    const processAuthentication = async () => {\n      if (!token || !userId) {\n        handleAuthError('Missing token or user ID');\n        return;\n      }\n      \n      // Mark this authentication as processed in session storage\n      sessionStorage.setItem('auth_processed', 'true');\n      \n      try {\n        // Fetch user data to get role and other information\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\n        const profileUrl = `${apiUrl}/api/users/profile`;\n        console.log('Fetching user profile from:', profileUrl);\n        \n        const response = await fetch(profileUrl, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        console.log('Profile API Response Status:', response.status);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user profile: ${response.status}`);\n        }\n        \n        const userDataResponse = await response.json();\n        console.log('User data received:', userDataResponse);\n        setUserData(userDataResponse);\n        \n        // Check if this is a first-time login (new user)\n        // We'll consider it a new user if the username matches the auto-generated pattern\n        const usernamePattern = /_[a-z0-9]{6}$/; // Pattern for auto-generated usernames\n        if (userDataResponse.username && usernamePattern.test(userDataResponse.username)) {\n          console.log('New user detected, showing username form');\n          setIsNewUser(true);\n          setLoading(false);\n          return; // Stop here and show username form\n        }\n        \n        // For existing users, proceed with normal flow\n        completeAuthentication(userDataResponse);\n      } catch (error) {\n        console.error('Error during Google auth success:', error);\n        handleAuthError(error.message);\n      }\n    };\n      \n\n    \n    processAuthentication();\n    \n    // Return cleanup function to clear timers and session storage if component unmounts\n    return () => {\n      if (redirectTimer.current) clearTimeout(redirectTimer.current);\n      if (errorRedirectTimer.current) clearTimeout(errorRedirectTimer.current);\n    };\n  }, [isClient, searchParams, router, toast, completeAuthentication, handleAuthError]); // Add all dependencies\n\n  // Function to check username availability\n  const checkUsername = async (username) => {\n    if (!username || username.length < 3) {\n      setUsernameError('Username must be at least 3 characters');\n      return false;\n    }\n    \n    // Check for valid characters\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\n    if (!usernameRegex.test(username)) {\n      setUsernameError('Username can only contain letters, numbers, and underscores');\n      return false;\n    }\n    \n    try {\n      setCheckingUsername(true);\n      const response = await fetch(`/api/users/check-username?username=${encodeURIComponent(username)}`);\n      \n      if (!response.ok) {\n        throw new Error('Failed to check username availability');\n      }\n      \n      const data = await response.json();\n      \n      setUsernameError(data.exists ? 'Username already taken' : '');\n      setCheckingUsername(false);\n      return !data.exists;\n    } catch (error) {\n      console.error('Error checking username:', error);\n      setUsernameError('Error checking username availability');\n      setCheckingUsername(false);\n      return false;\n    }\n  };\n  \n  // Handle username submission\n  const handleUsernameSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!username || username.length < 3) {\n      setUsernameError('Username must be at least 3 characters');\n      return;\n    }\n    \n    // Check for valid characters\n    const usernameRegex = /^[a-zA-Z0-9_]+$/;\n    if (!usernameRegex.test(username)) {\n      setUsernameError('Username can only contain letters, numbers, and underscores');\n      return;\n    }\n    \n    const isAvailable = await checkUsername(username);\n    if (!isAvailable) {\n      return;\n    }\n    \n    try {\n      const token = searchParams.get('token');\n      const userId = searchParams.get('userId');\n      \n      if (!token || !userId) {\n        throw new Error('Missing authentication information');\n      }\n      \n      // Show loading state\n      setLoading(true);\n      \n      // Update the username in the database\n      const response = await fetch('/api/users/complete-profile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ userId, username }),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to update username');\n      }\n      \n      const data = await response.json();\n      toast.showSuccessToast('Username updated successfully!');\n      \n      // Update user data in localStorage\n      if (data.user) {\n        localStorage.setItem('user', JSON.stringify(data.user));\n        // Also update the auth token if provided\n        if (data.token) {\n          localStorage.setItem('token', data.token);\n        }\n      }\n      \n      // Complete the authentication process with the updated user data\n      completeAuthentication(data.user || data);\n    } catch (error) {\n      console.error('Error updating username:', error);\n      setUsernameError(error.message || 'Failed to update username');\n      setLoading(false);\n    }\n  };\n  \n  // Only render content when on client-side to prevent hydration mismatch\n  if (!isClient) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n        <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md\">\n          <div className=\"text-center\">\n            <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n              Loading...\n            </h2>\n          </div>\n          <div className=\"flex justify-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md\">\n        {isNewUser ? (\n          <div>\n            <div className=\"text-center\">\n              <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n                Complete Your Profile\n              </h2>\n              <p className=\"mt-2 text-sm text-gray-600\">\n                Please choose a username for your account\n              </p>\n              \n              {userData && userData.profilePic && (\n                <div className=\"mt-4 flex justify-center\">\n                  <div className=\"relative w-24 h-24 rounded-full overflow-hidden\">\n                    <Image \n                      src={userData.profilePic} \n                      alt=\"Profile Picture\" \n                      fill\n                      className=\"object-cover\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <form onSubmit={handleUsernameSubmit} className=\"mt-8 space-y-6\">\n              <div>\n                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                  Username\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"username\"\n                    name=\"username\"\n                    type=\"text\"\n                    required\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    onBlur={() => username.length >= 3 && checkUsername(username)}\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n                    placeholder=\"Choose a username\"\n                    minLength={3}\n                    maxLength={20}\n                    pattern=\"[a-zA-Z0-9_]+\"\n                    title=\"Username can only contain letters, numbers, and underscores\"\n                  />\n                  {usernameError && (\n                    <p className=\"mt-2 text-sm text-red-600\">{usernameError}</p>\n                  )}\n                  {checkingUsername && (\n                    <p className=\"mt-2 text-sm text-gray-500\">Checking availability...</p>\n                  )}\n                </div>\n              </div>\n              \n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={checkingUsername || !!usernameError || username.length < 3}\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                >\n                  Continue\n                </button>\n              </div>\n            </form>\n          </div>\n        ) : (\n          <>\n            <div className=\"text-center\">\n              <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n                {error ? 'Authentication Error' : 'Completing login...'}\n              </h2>\n              <p className=\"mt-2 text-sm text-gray-600\">\n                {error \n                  ? `Error: ${error}. Redirecting to login page...` \n                  : 'Please wait while we redirect you to your dashboard.'}\n              </p>\n              {/* Debug info - only visible during development */}\n              {process.env.NODE_ENV === 'development' && (\n                <div className=\"mt-4 p-4 bg-gray-100 rounded text-left text-xs\">\n                  <p>Debug Info:</p>\n                  <p>Token: {searchParams.get('token') ? 'Present' : 'Missing'}</p>\n                  <p>User ID: {searchParams.get('userId') ? 'Present' : 'Missing'}</p>\n                </div>\n              )}\n            </div>\n            <div className=\"flex justify-center\">\n              {loading ? (\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\n              ) : error ? (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              ) : (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}