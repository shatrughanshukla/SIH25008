{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/auth/success/page.js"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { useToast } from '@/app/context/ToastContext';\r\nimport { useAuth } from '@/app/context/AuthContext';\r\n\r\nexport default function AuthSuccess() {\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const toast = useToast();\r\n  const { setUser } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [isClient, setIsClient] = useState(false);\r\n  \r\n  // Refs to track state and prevent duplicate operations\r\n  const hasShownToast = useRef(false);\r\n  const hasProcessedAuth = useRef(false);\r\n  const redirectTimer = useRef(null);\r\n  const errorRedirectTimer = useRef(null);\r\n  \r\n  // Set isClient to true once component mounts (client-side only)\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n  \r\n  // Display initial success message only once\r\n  useEffect(() => {\r\n    if (isClient && !hasShownToast.current) {\r\n      toast.showSuccessToast('Login successful! Redirecting to dashboard...');\r\n      hasShownToast.current = true;\r\n    }\r\n  }, [isClient, toast]);\r\n\r\n  // Main authentication logic\r\n  useEffect(() => {\r\n    // Only run on client-side\r\n    if (!isClient) return;\r\n    \r\n    // Get token and userId from URL params\r\n    const token = searchParams.get('token');\r\n    const userId = searchParams.get('userId');\r\n\r\n    console.log('Auth Success Page - Token:', token ? 'Present' : 'Missing');\r\n    console.log('Auth Success Page - UserId:', userId ? 'Present' : 'Missing');\r\n\r\n    // Prevent processing more than once\r\n    if (hasProcessedAuth.current) return;\r\n    \r\n    // Check if we've already processed this login in a previous session\r\n    const hasProcessed = sessionStorage.getItem('auth_processed');\r\n    \r\n    if (hasProcessed) {\r\n      console.log('Auth already processed, redirecting to dashboard');\r\n      const storedUser = localStorage.getItem('user');\r\n      if (storedUser) {\r\n        try {\r\n          const user = JSON.parse(storedUser);\r\n          // Update the AuthContext state with the stored user\r\n          setUser(user);\r\n          const redirectPath = user.role === 'teacher' ? '/dashboard/teacher' : '/dashboard/student';\r\n          router.push(redirectPath);\r\n        } catch (e) {\r\n          console.error('Error parsing stored user:', e);\r\n          router.push('/login');\r\n        }\r\n      } else {\r\n        // If no user in localStorage but we have token/userId in URL, process the auth again\r\n        if (token && userId) {\r\n          console.log('No stored user but have token/userId, processing auth again');\r\n          sessionStorage.removeItem('auth_processed');\r\n        } else {\r\n          router.push('/login');\r\n          return;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    \r\n    // Mark that we've started processing this authentication\r\n    hasProcessedAuth.current = true;\r\n    \r\n    const processAuthentication = async () => {\r\n      if (!token || !userId) {\r\n        handleAuthError('Missing token or user ID');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // Fetch user data to get role and other information\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\r\n        const profileUrl = `${apiUrl}/api/users/profile`;\r\n        console.log('Fetching user profile from:', profileUrl);\r\n        \r\n        const response = await fetch(profileUrl, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          cache: 'no-store' // Prevent caching issues\r\n        });\r\n        \r\n        console.log('Profile API Response Status:', response.status);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user profile: ${response.status}`);\r\n        }\r\n        \r\n        const userData = await response.json();\r\n        console.log('User data received:', userData);\r\n        \r\n        // Create user object with token and user data\r\n        const user = {\r\n          _id: userId,\r\n          name: userData.name,\r\n          email: userData.email,\r\n          username: userData.username,\r\n          role: userData.role || 'student', // Default to student if role is missing\r\n          token: token\r\n        };\r\n\r\n        console.log('Saving user to localStorage and AuthContext:', user);\r\n        // Save user to localStorage\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        \r\n        // Update the AuthContext state with the user\r\n        setUser(user);\r\n        \r\n        // Mark this authentication as processed in session storage AFTER successful profile fetch\r\n        sessionStorage.setItem('auth_processed', 'true');\r\n        \r\n        // Show success message (only if we haven't already)\r\n        if (!hasShownToast.current) {\r\n          toast.showSuccessToast('Successfully logged in with Google!');\r\n          hasShownToast.current = true;\r\n        }\r\n        \r\n        setLoading(false);\r\n        \r\n        // Redirect based on user role\r\n        const redirectPath = userData.role === 'teacher' ? '/dashboard/teacher' : '/dashboard/student';\r\n        console.log('Redirecting to:', redirectPath);\r\n        \r\n        // Add a small delay before redirecting to ensure localStorage is updated\r\n        redirectTimer.current = setTimeout(() => {\r\n          router.push(redirectPath);\r\n        }, 2000);\r\n      } catch (error) {\r\n        console.error('Error during Google auth success:', error);\r\n        handleAuthError(error.message);\r\n      }\r\n    };\r\n    \r\n    const handleAuthError = (errorMessage) => {\r\n      setError(errorMessage);\r\n      setLoading(false);\r\n      toast.showErrorToast(`Authentication error: ${errorMessage}`);\r\n      // Clear the auth processed flag on error\r\n      sessionStorage.removeItem('auth_processed');\r\n      // Clear any existing user data to prevent login loops\r\n      localStorage.removeItem('user');\r\n      // Clear the AuthContext state\r\n      setUser(null);\r\n      errorRedirectTimer.current = setTimeout(() => {\r\n        router.push('/login');\r\n      }, 3000);\r\n    };\r\n    \r\n    processAuthentication();\r\n    \r\n    // Return cleanup function to clear timers and session storage if component unmounts\r\n    return () => {\r\n      if (redirectTimer.current) clearTimeout(redirectTimer.current);\r\n      if (errorRedirectTimer.current) clearTimeout(errorRedirectTimer.current);\r\n    };\r\n  }, [isClient, searchParams, router, toast]); // Add isClient as dependency\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md\">\r\n        <div className=\"text-center\">\r\n          <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\r\n            {error ? 'Authentication Error' : 'Completing login...'}\r\n          </h2>\r\n          <p className=\"mt-2 text-sm text-gray-600\">\r\n            {error \r\n              ? `Error: ${error}. Redirecting to login page...` \r\n              : 'Please wait while we redirect you to your dashboard.'}\r\n          </p>\r\n          {/* Debug info - only visible during development and only on client-side */}\r\n          {isClient && (\r\n            <div className=\"mt-4 p-4 bg-gray-100 rounded text-left text-xs\">\r\n              <p>Debug Info:</p>\r\n              <p>Token: {searchParams.get('token') ? 'Present' : 'Missing'}</p>\r\n              <p>User ID: {searchParams.get('userId') ? 'Present' : 'Missing'}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"flex justify-center\">\r\n          {loading ? (\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n          ) : error ? (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n          ) : (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 text-green-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n            </svg>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}