{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/api/auth/register/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nexport async function POST(request) {\n  try {\n    // Since we're using FormData in the frontend\n    const formData = await request.formData();\n    \n    // Call the backend API to register\n    const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/auth/register`, {\n      method: 'POST',\n      body: formData,\n    });\n    \n    const data = await response.json();\n    \n    if (!response.ok) {\n      return NextResponse.json(\n        { message: data.message || 'Registration failed' },\n        { status: response.status }\n      );\n    }\n    \n    // Return the response from the backend\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Registration error:', error);\n    return NextResponse.json(\n      { message: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,6CAA6C;QAC7C,MAAM,WAAW,MAAM,QAAQ,QAAQ;QAEvC,mCAAmC;QACnC,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,EAAE;YACnF,QAAQ;YACR,MAAM;QACR;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS,KAAK,OAAO,IAAI;YAAsB,GACjD;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,uCAAuC;QACvC,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}