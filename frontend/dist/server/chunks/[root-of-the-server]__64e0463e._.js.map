{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/lib/ndma.js"],"sourcesContent":["import 'server-only';\r\nimport { XMLParser } from 'fast-xml-parser';\r\nimport crypto from 'crypto';\r\n\r\nconst parser = new XMLParser({\r\n  ignoreAttributes: false,\r\n  attributeNamePrefix: '',\r\n  trimValues: true,\r\n  textNodeName: '#text',\r\n});\r\n\r\nfunction asArray(x){ return Array.isArray(x) ? x : (x ? [x] : []); }\r\nfunction shortId(str){ return crypto.createHash('sha1').update(String(str || '')).digest('hex').slice(0,16); }\r\nfunction pickText(x){\r\n  if (x == null) return null;\r\n  if (typeof x === 'string' || typeof x === 'number') return String(x);\r\n  if (typeof x === 'object') return x['#text'] || x._text || x.value || null;\r\n  return null;\r\n}\r\nfunction capSeverityToBadge(s){\r\n  const k = String(s || '').toLowerCase();\r\n  if (k === 'extreme') return 'Extreme';\r\n  if (k === 'severe')  return 'Severe';\r\n  if (k === 'moderate')return 'Moderate';\r\n  if (k === 'minor')   return 'Minor';\r\n  return 'Severe';\r\n}\r\n/** polygon \"lat,lon lat,lon ...\" -> centroid [lon,lat] */\r\nfunction centroidFromPolygon(polyStr=''){\r\n  const pts = polyStr.trim().split(/\\s+/).map(p=>{\r\n    const [lat, lon] = p.split(',').map(Number);\r\n    return [lon, lat];\r\n  }).filter(([lon,lat])=>Number.isFinite(lon)&&Number.isFinite(lat));\r\n  if (!pts.length) return null;\r\n  const [sl, sb] = pts.reduce(([a,b],[lon,lat])=>[a+lon,b+lat],[0,0]);\r\n  return [sl/pts.length, sb/pts.length];\r\n}\r\n/** circle \"lat,lon radiusKm\" -> [lon,lat] */\r\nfunction centerFromCircle(circleStr=''){\r\n  const m = circleStr.trim().match(/^(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)/);\r\n  if (!m) return null;\r\n  const lat = parseFloat(m[1]), lon = parseFloat(m[2]);\r\n  return (Number.isFinite(lat) && Number.isFinite(lon)) ? [lon, lat] : null;\r\n}\r\nfunction buildXmlUrl(identifier){\r\n  if (!identifier) return null;\r\n  // Use the FULL identifier (keep the IN- prefix)\r\n  return `https://sachet.ndma.gov.in/cap_public_website/FetchXMLFile?identifier=${encodeURIComponent(identifier)}`;\r\n}\r\nasync function fetchWithTimeout(url, ms=4000){\r\n  const ctrl = new AbortController();\r\n  const t = setTimeout(()=>ctrl.abort(), ms);\r\n  try{\r\n    const res = await fetch(url, { signal: ctrl.signal, next: { revalidate: 60 } });\r\n    if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n    return await res.text();\r\n  } finally {\r\n    clearTimeout(t);\r\n  }\r\n}\r\nfunction isEnglishLangCode(v = '') {\r\n  const s = String(v).trim().toLowerCase();\r\n  if (!s) return false;\r\n  // matches: en, en-in, en_us, english, etc.\r\n  return s === 'en' || s.startsWith('en-') || s.startsWith('en_') || s === 'english';\r\n}\r\n\r\nfunction looksEnglish(text = '') {\r\n  const s = String(text || '').trim();\r\n  if (!s) return false;\r\n  // crude but fast: ratio of basic ASCII letters, digits, spaces, and common punctuations\r\n  const ascii = s.match(/[A-Za-z0-9 ,.;:!?'()\"“”‘’\\-–—\\/\\\\]/g)?.length || 0; // note: escaped /\r\n  const total = s.length;\r\n  return ascii / total >= 0.75; // at least 75% ASCII-ish\r\n}\r\n\r\n/**\r\n * Fetch NDMA CAP (RSS) → normalize → enrich top N from the CAP XML.\r\n * - Picks English info block when available (en or en-IN)\r\n * - ALWAYS overrides severity & location from XML (so no \"Unknown\")\r\n */\r\nexport async function getNdmaCapAlerts(limit = 5){\r\n  const rssUrl = process.env.NDMA_CAP_RSS;\r\n  if (!rssUrl) throw new Error('NDMA_CAP_RSS not set');\r\n\r\n  const res = await fetch(rssUrl, { next: { revalidate: 60 } });\r\n  if (!res.ok) throw new Error(`NDMA RSS failed: ${res.status}`);\r\n\r\n  const xml = await res.text();\r\n  const j = parser.parse(xml);\r\n  const items = asArray(j?.rss?.channel?.item);\r\n\r\n  const base = items.map(i => {\r\n    const identifier = pickText(i['cap:identifier']) || pickText(i.guid);\r\n    const sent = pickText(i['cap:sent']) || pickText(i.pubDate) || null;\r\n\r\n    // Try coordinates if present in RSS (rare)\r\n    let coords = null;\r\n    const poly = pickText(i['cap:polygon']) || pickText(i['cap:area']?.['cap:polygon']);\r\n    const circle = pickText(i['cap:circle']) || pickText(i['cap:area']?.['cap:circle']);\r\n    if (poly) coords = centroidFromPolygon(poly);\r\n    if (!coords && circle) coords = centerFromCircle(circle);\r\n\r\n    const xmlUrl = buildXmlUrl(identifier);\r\n    const humanUrl = pickText(i.link) || null;\r\n\r\n    // React-safe unique key\r\n    const uid = shortId(`${identifier || ''}|${sent || ''}`);\r\n\r\n    return {\r\n      kind: 'cap',\r\n      uid,                          // Use this in React keys\r\n      id: identifier || uid,\r\n      identifier: identifier || null,\r\n      title: pickText(i.title) || 'Alert', // will be replaced by English headline from XML\r\n      time: sent ? new Date(sent).toISOString() : null,\r\n      location: '—',                // will be filled from XML\r\n      severity: 'Unknown',          // will be overridden by XML\r\n      link: humanUrl || xmlUrl,     // keep something clickable\r\n      xmlUrl,\r\n      coords,\r\n      event: '',\r\n    };\r\n  });\r\n\r\n  base.sort((a,b)=>new Date(b.time||0)-new Date(a.time||0));\r\n  const top = base.slice(0, limit);\r\n\r\n  // Enrich from CAP XML (prefer English block)\r\n  await Promise.allSettled(top.map(async a => {\r\n    if (!a.xmlUrl) return;\r\n    try {\r\n      const capXml = await fetchWithTimeout(a.xmlUrl, 4000);\r\n      const capJ = parser.parse(capXml);\r\n      const alert = capJ?.['cap:alert'] || {};\r\n      const infosRaw = alert?.['cap:info'];\r\n      const infos = Array.isArray(infosRaw) ? infosRaw : (infosRaw ? [infosRaw] : []);\r\n\r\n      const langOf = (inf) => pickText(inf?.['cap:language']) || '';\r\n      const headOf = (inf) => pickText(inf?.['cap:headline']) || '';\r\n      const areaOf = (inf) => {\r\n        const areaRaw = inf?.['cap:area'];\r\n        const areas = Array.isArray(areaRaw) ? areaRaw : (areaRaw ? [areaRaw] : []);\r\n        return pickText(areas[0]?.['cap:areaDesc']) || '';\r\n      };\r\n\r\n      // Rank infos: explicit English first, then those that \"look English\", then others\r\n      const ranked = [...infos].sort((x, y) => {\r\n        const xe = isEnglishLangCode(langOf(x)) ? 2 : looksEnglish(headOf(x) + ' ' + areaOf(x)) ? 1 : 0;\r\n        const ye = isEnglishLangCode(langOf(y)) ? 2 : looksEnglish(headOf(y) + ' ' + areaOf(y)) ? 1 : 0;\r\n        return ye - xe; // higher score first\r\n      });\r\n\r\n      const info = ranked[0] || {};\r\n      const sevRaw = pickText(info?.['cap:severity']);\r\n      const ev = pickText(info?.['cap:event']) || 'Alert';\r\n      const head = headOf(info);\r\n      const areaDesc = areaOf(info);\r\n\r\n      // ALWAYS override from XML; default severity to 'Severe' when missing/unknown\r\n      a.severity = capSeverityToBadge(sevRaw);  // defaults unknown -> 'Severe'\r\n      a.event = ev;\r\n      a.title = head || (areaDesc ? `${ev} – ${areaDesc}` : ev);\r\n      a.location = areaDesc || a.location;\r\n\r\n      // mark language for filtering: explicit code OR heuristic\r\n      const code = langOf(info);\r\n      a._isEnglish = isEnglishLangCode(code) || looksEnglish(a.title + ' ' + a.location);\r\n    } catch {\r\n      // On enrichment failure, be conservative: not English\r\n      a._isEnglish = false;\r\n      // still normalize severity in case upstream set something odd\r\n      a.severity = capSeverityToBadge(a.severity);\r\n    }\r\n  }));\r\n\r\n  // Return English only (explicit 'en*' or looks-English heuristic)\r\n  const englishOnly = top.filter(a => !!a._isEnglish);\r\n\r\n  return englishOnly;\r\n} // <-- missing brace added here\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/api/alerts/route.js"],"sourcesContent":["// src/app/api/alerts/route.js\r\nimport { getNdmaCapAlerts } from '@/lib/ndma';\r\n\r\nexport const runtime = 'nodejs';\r\nexport const revalidate = 60;\r\n\r\nexport async function GET() {\r\n  try {\r\n    // Only NDMA CAP; keep it lean (top 5)\r\n    const items = await getNdmaCapAlerts(5);\r\n\r\n    return Response.json(\r\n      { items },\r\n      { headers: { 'Cache-Control': 's-maxage=60, stale-while-revalidate=300' } }\r\n    );\r\n  } catch (e) {\r\n    // Graceful failure: empty list (your UI already shows \"No recent alerts.\")\r\n    return Response.json({ items: [], error: e.message }, { status: 200 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,8BAA8B;;;;;;;;;AAC9B;;AAEO,MAAM,UAAU;AAChB,MAAM,aAAa;AAEnB,eAAe;IACpB,IAAI;QACF,sCAAsC;QACtC,MAAM,QAAQ,MAAM,IAAA,wIAAgB,EAAC;QAErC,OAAO,SAAS,IAAI,CAClB;YAAE;QAAM,GACR;YAAE,SAAS;gBAAE,iBAAiB;YAA0C;QAAE;IAE9E,EAAE,OAAO,GAAG;QACV,2EAA2E;QAC3E,OAAO,SAAS,IAAI,CAAC;YAAE,OAAO,EAAE;YAAE,OAAO,EAAE,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF","debugId":null}}]
}