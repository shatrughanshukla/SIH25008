{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/api/users/check-username/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\n\nexport async function GET(request) {\n  try {\n    // Get the username from the query parameters\n    const { searchParams } = new URL(request.url);\n    const username = searchParams.get('username');\n\n    if (!username) {\n      return NextResponse.json(\n        { message: 'Username parameter is required' },\n        { status: 400 }\n      );\n    }\n\n    // Make a request to the backend API to check if the username exists\n    const backendUrl = process.env.BACKEND_URL || 'http://localhost:5000';\n    const response = await fetch(`${backendUrl}/api/users/check-username?username=${encodeURIComponent(username)}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(\n        { message: errorData.message || 'Failed to check username' },\n        { status: response.status }\n      );\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error('Error checking username:', error);\n    return NextResponse.json(\n      { message: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,IAAI,OAAO;IAC/B,IAAI;QACF,6CAA6C;QAC7C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC;QAElC,IAAI,CAAC,UAAU;YACb,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAiC,GAC5C;gBAAE,QAAQ;YAAI;QAElB;QAEA,oEAAoE;QACpE,MAAM,aAAa,QAAQ,GAAG,CAAC,WAAW,IAAI;QAC9C,MAAM,WAAW,MAAM,MAAM,GAAG,WAAW,mCAAmC,EAAE,mBAAmB,WAAW,EAAE;YAC9G,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,SAAS,UAAU,OAAO,IAAI;YAA2B,GAC3D;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;QAAwB,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}