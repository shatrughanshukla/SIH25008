{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/utils/authDiagnostics.js"],"sourcesContent":["/**\n * Authentication Diagnostics Utility\n * \n * This utility provides functions to help diagnose authentication issues\n * in the application. It includes tools for token validation, API testing,\n * and network diagnostics.\n */\n\n/**\n * Checks if a JWT token is valid and not expired\n * @param {string} token - The JWT token to validate\n * @returns {Object} - Token validity information\n */\nexport const validateToken = (token) => {\n  if (!token) {\n    return { valid: false, error: 'No token provided' };\n  }\n  \n  try {\n    // Split the token into parts\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      return { valid: false, error: 'Invalid token format' };\n    }\n    \n    // Decode the payload (middle part)\n    const payload = JSON.parse(atob(parts[1]));\n    \n    // Check expiration\n    const currentTime = Math.floor(Date.now() / 1000);\n    if (payload.exp && payload.exp < currentTime) {\n      return { \n        valid: false, \n        error: 'Token expired', \n        expiredAt: new Date(payload.exp * 1000).toLocaleString(),\n        currentTime: new Date().toLocaleString()\n      };\n    }\n    \n    return { \n      valid: true, \n      payload,\n      expiresAt: payload.exp ? new Date(payload.exp * 1000).toLocaleString() : 'No expiration'\n    };\n  } catch (error) {\n    return { valid: false, error: `Token validation error: ${error.message}` };\n  }\n};\n\n/**\n * Tests the API endpoint with the provided token\n * @param {string} endpoint - The API endpoint to test\n * @param {string} token - The JWT token to use for authentication\n * @returns {Promise<Object>} - API test results\n */\nexport const testApiEndpoint = async (endpoint, token) => {\n  const startTime = performance.now();\n  const results = { endpoint, success: false, timing: {} };\n  \n  try {\n    // Make the request with timing information\n    const response = await fetch(endpoint, {\n      method: 'GET',\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n        'Content-Type': 'application/json',\n      },\n      cache: 'no-store'\n    });\n    \n    const endTime = performance.now();\n    results.timing.total = `${(endTime - startTime).toFixed(2)}ms`;\n    \n    // Get response details\n    results.status = response.status;\n    results.statusText = response.statusText;\n    results.headers = {};\n    \n    // Convert headers to object\n    response.headers.forEach((value, key) => {\n      results.headers[key] = value;\n    });\n    \n    // Try to parse response body\n    try {\n      results.data = await response.json();\n    } catch (e) {\n      results.data = 'Could not parse response as JSON';\n    }\n    \n    results.success = response.ok;\n    return results;\n  } catch (error) {\n    const endTime = performance.now();\n    results.timing.total = `${(endTime - startTime).toFixed(2)}ms`;\n    results.error = error.message;\n    return results;\n  }\n};\n\n/**\n * Runs a comprehensive authentication diagnostic\n * @returns {Promise<Object>} - Diagnostic results\n */\nexport const runAuthDiagnostic = async () => {\n  const results = {\n    timestamp: new Date().toISOString(),\n    environment: {},\n    localStorage: {},\n    tokenValidation: {},\n    apiTests: []\n  };\n  \n  // Check environment\n  results.environment = {\n    nextPublicApiUrl: process.env.NEXT_PUBLIC_API_URL || 'Not set',\n    baseUrl: window.location.origin,\n    userAgent: navigator.userAgent\n  };\n  \n  // Check localStorage\n  try {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      results.localStorage.user = {\n        found: true,\n        hasToken: !!user.token,\n        tokenPreview: user.token ? `${user.token.substring(0, 10)}...` : 'No token',\n        role: user.role || 'Not specified'\n      };\n      \n      // Validate token\n      if (user.token) {\n        results.tokenValidation = validateToken(user.token);\n      }\n      \n      // Test API endpoints\n      const endpoints = [\n        '/api/users/profile',\n        '/api/auth/verify'\n      ];\n      \n      for (const endpoint of endpoints) {\n        const apiResult = await testApiEndpoint(endpoint, user.token);\n        results.apiTests.push(apiResult);\n      }\n    } else {\n      results.localStorage.user = { found: false };\n    }\n  } catch (error) {\n    results.localStorage.error = error.message;\n  }\n  \n  return results;\n};\n\n/**\n * Logs diagnostic information to console in a formatted way\n * @param {Object} diagnosticResults - Results from runAuthDiagnostic\n */\nexport const logDiagnosticResults = (diagnosticResults) => {\n  console.group('🔍 Authentication Diagnostic Results');\n  console.log('Timestamp:', diagnosticResults.timestamp);\n  \n  console.group('Environment');\n  console.table(diagnosticResults.environment);\n  console.groupEnd();\n  \n  console.group('LocalStorage');\n  console.table(diagnosticResults.localStorage.user || diagnosticResults.localStorage.error);\n  console.groupEnd();\n  \n  if (diagnosticResults.tokenValidation.valid !== undefined) {\n    console.group('Token Validation');\n    console.table(diagnosticResults.tokenValidation);\n    console.groupEnd();\n  }\n  \n  console.group('API Tests');\n  diagnosticResults.apiTests.forEach((test, index) => {\n    console.group(`Test ${index + 1}: ${test.endpoint}`);\n    console.log('Status:', test.status, test.statusText);\n    console.log('Timing:', test.timing.total);\n    console.log('Success:', test.success);\n    if (test.error) console.error('Error:', test.error);\n    console.log('Response:', test.data);\n    console.groupEnd();\n  });\n  console.groupEnd();\n  \n  console.groupEnd();\n};\n\n/**\n * Run and log diagnostics in one step\n * @returns {Promise<Object>} - Diagnostic results\n */\nexport const diagnoseAuthIssues = async () => {\n  const results = await runAuthDiagnostic();\n  logDiagnosticResults(results);\n  return results;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/utils/apiTester.js"],"sourcesContent":["/**\n * API Testing Utility\n * \n * This utility provides functions to test API endpoints and diagnose connection issues.\n */\n\n/**\n * Tests an API endpoint with various configurations\n * @param {string} endpoint - The API endpoint to test\n * @param {Object} options - Test options\n * @returns {Promise<Object>} - Test results\n */\nexport const testApiEndpoint = async (endpoint, options = {}) => {\n  const {\n    method = 'GET',\n    token = null,\n    body = null,\n    baseUrls = [\n      '', // Relative URL (uses Next.js API routes)\n      'http://localhost:5000', // Direct backend URL\n      process.env.NEXT_PUBLIC_API_URL || '' // Environment variable URL\n    ],\n    timeout = 5000,\n    includeCredentials = true\n  } = options;\n  \n  const results = [];\n  \n  // Test each base URL\n  for (const baseUrl of baseUrls) {\n    if (!baseUrl && baseUrls.length > 1) continue; // Skip empty base URL if we have alternatives\n    \n    const fullUrl = `${baseUrl}${endpoint}`;\n    const result = {\n      url: fullUrl,\n      success: false,\n      status: null,\n      statusText: null,\n      timing: null,\n      error: null,\n      data: null\n    };\n    \n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), timeout);\n      \n      const startTime = performance.now();\n      \n      const fetchOptions = {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n        },\n        ...(body ? { body: JSON.stringify(body) } : {}),\n        ...(includeCredentials ? { credentials: 'include' } : {}),\n        signal: controller.signal\n      };\n      \n      const response = await fetch(fullUrl, fetchOptions);\n      clearTimeout(timeoutId);\n      \n      const endTime = performance.now();\n      result.timing = `${(endTime - startTime).toFixed(2)}ms`;\n      \n      result.status = response.status;\n      result.statusText = response.statusText;\n      \n      // Try to parse response as JSON\n      try {\n        result.data = await response.json();\n      } catch (e) {\n        // If not JSON, get text\n        result.data = await response.text();\n      }\n      \n      result.success = response.ok;\n    } catch (error) {\n      result.error = error.name === 'AbortError' \n        ? `Request timed out after ${timeout}ms` \n        : error.message;\n    }\n    \n    results.push(result);\n  }\n  \n  return results;\n};\n\n/**\n * Tests all critical API endpoints and returns results\n * @param {string} token - JWT token for authenticated requests\n * @returns {Promise<Object>} - Test results for all endpoints\n */\nexport const testAllEndpoints = async (token = null) => {\n  const endpoints = [\n    { path: '/api/users/profile', method: 'GET', requiresAuth: true },\n    { path: '/api/auth/login', method: 'POST', requiresAuth: false, body: { email: 'test@example.com', password: 'password' } },\n    { path: '/api/auth/refresh', method: 'POST', requiresAuth: false, body: { token } }\n  ];\n  \n  const results = {};\n  \n  for (const endpoint of endpoints) {\n    const options = {\n      method: endpoint.method,\n      ...(endpoint.requiresAuth && token ? { token } : {}),\n      ...(endpoint.body ? { body: endpoint.body } : {})\n    };\n    \n    results[endpoint.path] = await testApiEndpoint(endpoint.path, options);\n  }\n  \n  return results;\n};\n\n/**\n * Logs API test results to console in a formatted way\n * @param {Object} results - Results from testAllEndpoints\n */\nexport const logApiTestResults = (results) => {\n  console.group('🔌 API Connection Test Results');\n  \n  for (const [endpoint, tests] of Object.entries(results)) {\n    console.group(`Endpoint: ${endpoint}`);\n    \n    tests.forEach((test, index) => {\n      console.group(`Test ${index + 1}: ${test.url}`);\n      console.log(`Status: ${test.status || 'N/A'} ${test.statusText || ''}`);\n      console.log(`Success: ${test.success}`);\n      console.log(`Timing: ${test.timing || 'N/A'}`);\n      \n      if (test.error) {\n        console.error(`Error: ${test.error}`);\n      }\n      \n      if (test.data) {\n        console.log('Response data:', test.data);\n      }\n      \n      console.groupEnd();\n    });\n    \n    console.groupEnd();\n  }\n  \n  console.groupEnd();\n};\n\n/**\n * Run and log API tests in one step\n * @param {string} token - JWT token for authenticated requests\n * @returns {Promise<Object>} - Test results\n */\nexport const runApiTests = async (token = null) => {\n  const results = await testAllEndpoints(token);\n  logApiTestResults(results);\n  return results;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/components/AuthDiagnosticTool.jsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { diagnoseAuthIssues, validateToken } from '../utils/authDiagnostics';\nimport { runApiTests } from '../utils/apiTester';\n\n/**\n * A diagnostic tool component that helps debug authentication issues\n * Can be added to any page where authentication debugging is needed\n */\nconst AuthDiagnosticTool = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isApiTesting, setIsApiTesting] = useState(false);\n  const [apiTestResults, setApiTestResults] = useState(null);\n  const [manualToken, setManualToken] = useState('');\n  const [tokenValidation, setTokenValidation] = useState(null);\n\n  const runDiagnostics = async () => {\n    setIsLoading(true);\n    try {\n      const diagnosticResults = await diagnoseAuthIssues();\n      setResults(diagnosticResults);\n    } catch (error) {\n      console.error('Error running diagnostics:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const testApiConnections = async () => {\n    setIsApiTesting(true);\n    try {\n      // Get token from localStorage if available\n      let token = null;\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n          token = user.token;\n        }\n      } catch (e) {\n        console.error('Error getting token from localStorage:', e);\n      }\n      \n      const results = await runApiTests(token);\n      setApiTestResults(results);\n    } catch (error) {\n      console.error('Error testing API connections:', error);\n    } finally {\n      setIsApiTesting(false);\n    }\n  };\n\n  const validateManualToken = () => {\n    if (!manualToken.trim()) {\n      setTokenValidation({ valid: false, error: 'No token provided' });\n      return;\n    }\n\n    const validation = validateToken(manualToken);\n    setTokenValidation(validation);\n  };\n\n  const clearLocalStorage = () => {\n    localStorage.removeItem('user');\n    alert('Local storage cleared. You will need to log in again.');\n    window.location.href = '/login';\n  };\n\n  if (!isOpen) {\n    return (\n      <button \n        onClick={() => setIsOpen(true)}\n        className=\"fixed bottom-4 right-4 bg-gray-800 text-white p-2 rounded-full shadow-lg z-50 opacity-70 hover:opacity-100 transition-opacity\"\n        title=\"Auth Diagnostics\"\n      >\n        🔍\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-3xl max-h-[90vh] overflow-auto\">\n        <div className=\"sticky top-0 bg-gray-100 p-4 border-b flex justify-between items-center\">\n          <h2 className=\"text-xl font-bold\">Authentication Diagnostic Tool</h2>\n          <button \n            onClick={() => setIsOpen(false)}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            ✕\n          </button>\n        </div>\n        \n        <div className=\"p-6 space-y-6\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Run Diagnostics</h3>\n            <p className=\"text-gray-600\">This will check your authentication status, token validity, and API connectivity.</p>\n            <div className=\"flex space-x-4\">\n              <button\n                onClick={runDiagnostics}\n                disabled={isLoading}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n              >\n                {isLoading ? 'Running...' : 'Run Auth Diagnostics'}\n              </button>\n              \n              <button\n                onClick={testApiConnections}\n                disabled={isApiTesting}\n                className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n              >\n                {isApiTesting ? 'Testing...' : 'Test API Connections'}\n              </button>\n            </div>\n          </div>\n\n          {apiTestResults && (\n            <div className=\"border rounded-lg p-4 bg-gray-50 space-y-4\">\n              <h3 className=\"text-lg font-semibold\">API Test Results</h3>\n              \n              {Object.entries(apiTestResults).map(([endpoint, tests]) => (\n                <div key={endpoint} className=\"mb-4\">\n                  <h4 className=\"font-medium\">{endpoint}</h4>\n                  \n                  {tests.map((test, index) => (\n                    <div key={index} className=\"mb-2 bg-white p-2 rounded border\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"font-medium\">{test.url}</span>\n                        <span className={`px-2 py-0.5 rounded text-sm ${test.success ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                          {test.status || 'Failed'} {test.statusText || ''}\n                        </span>\n                      </div>\n                      {test.error && (\n                        <div className=\"text-red-600 text-sm mt-1\">{test.error}</div>\n                      )}\n                      <div className=\"text-gray-500 text-sm\">Response time: {test.timing || 'N/A'}</div>\n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {results && (\n            <div className=\"border rounded-lg p-4 bg-gray-50 space-y-4\">\n              <h3 className=\"text-lg font-semibold\">Results</h3>\n              \n              <div>\n                <h4 className=\"font-medium\">Environment</h4>\n                <div className=\"bg-white p-2 rounded border overflow-x-auto\">\n                  <pre className=\"text-sm\">{JSON.stringify(results.environment, null, 2)}</pre>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium\">LocalStorage User</h4>\n                <div className=\"bg-white p-2 rounded border overflow-x-auto\">\n                  <pre className=\"text-sm\">{JSON.stringify(results.localStorage, null, 2)}</pre>\n                </div>\n              </div>\n              \n              {results.tokenValidation && results.tokenValidation.valid !== undefined && (\n                <div>\n                  <h4 className=\"font-medium\">Token Validation</h4>\n                  <div className={`p-2 rounded border ${results.tokenValidation.valid ? 'bg-green-50' : 'bg-red-50'}`}>\n                    {results.tokenValidation.valid ? (\n                      <div className=\"text-green-700\">✓ Token is valid</div>\n                    ) : (\n                      <div className=\"text-red-700\">✗ {results.tokenValidation.error}</div>\n                    )}\n                    <pre className=\"text-sm mt-2 bg-white p-2 rounded\">{JSON.stringify(results.tokenValidation, null, 2)}</pre>\n                  </div>\n                </div>\n              )}\n              \n              <div>\n                <h4 className=\"font-medium\">API Tests</h4>\n                {results.apiTests.map((test, index) => (\n                  <div key={index} className=\"mb-2 bg-white p-2 rounded border\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"font-medium\">{test.endpoint}</span>\n                      <span className={`px-2 py-0.5 rounded text-sm ${test.success ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                        {test.status} {test.statusText}\n                      </span>\n                    </div>\n                    {test.error && (\n                      <div className=\"text-red-600 text-sm mt-1\">{test.error}</div>\n                    )}\n                    <div className=\"text-gray-500 text-sm\">Response time: {test.timing.total}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          <div className=\"border-t pt-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">Manual Token Validation</h3>\n            <div className=\"space-y-2\">\n              <textarea\n                value={manualToken}\n                onChange={(e) => setManualToken(e.target.value)}\n                placeholder=\"Paste JWT token here\"\n                className=\"w-full p-2 border rounded h-24\"\n              />\n              <button\n                onClick={validateManualToken}\n                className=\"bg-gray-700 hover:bg-gray-800 text-white px-4 py-2 rounded\"\n              >\n                Validate Token\n              </button>\n            </div>\n            \n            {tokenValidation && (\n              <div className={`mt-4 p-3 rounded ${tokenValidation.valid ? 'bg-green-50 border border-green-200' : 'bg-red-50 border border-red-200'}`}>\n                {tokenValidation.valid ? (\n                  <div>\n                    <div className=\"text-green-700 font-medium\">✓ Token is valid</div>\n                    <div className=\"text-sm mt-1\">Expires: {tokenValidation.expiresAt}</div>\n                  </div>\n                ) : (\n                  <div className=\"text-red-700\">\n                    ✗ {tokenValidation.error}\n                    {tokenValidation.expiredAt && (\n                      <div className=\"text-sm mt-1\">\n                        Expired at: {tokenValidation.expiredAt}<br />\n                        Current time: {tokenValidation.currentTime}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n          \n          <div className=\"border-t pt-4\">\n            <h3 className=\"text-lg font-semibold mb-2\">Troubleshooting Actions</h3>\n            <div className=\"space-y-2\">\n              <button\n                onClick={clearLocalStorage}\n                className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded\"\n              >\n                Clear Auth Data & Redirect to Login\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthDiagnosticTool;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 989, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/dashboard/teacher/page.js"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport AuthDiagnosticTool from '@/app/components/AuthDiagnosticTool';\nimport { FaBook, FaUsers, FaClipboardList, FaBell, FaUserTie, FaChalkboardTeacher } from 'react-icons/fa';\n\nexport default function TeacherDashboard() {\n  const { user, loading, getUserProfile, logout } = useAuth();\n  const router = useRouter();\n  const [activeTab, setActiveTab] = useState('overview');\n  \n  const [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n  // If not loading and no user, redirect to login\n  if (!loading && !user) {\n    console.log('No user detected, redirecting to login');\n    router.push('/login');\n    return;\n  }\n\n  // If user exists, get the latest profile data\n  if (user) {\n    let isMounted = true; // Flag to track component mount state\n    \n    // Set loading state before API call\n    setIsLoading(true);\n\n    // Add a small delay to prevent rapid consecutive calls\n    const timeoutId = setTimeout(async () => {\n      try {\n        const profileData = await getUserProfile();\n        \n        // Check if component is still mounted before updating state\n        if (isMounted) {\n          setIsLoading(false);\n\n          // If profile data is null, redirect to login\n          if (!profileData) {\n            console.log('No profile data returned, redirecting to login');\n            router.push('/login');\n            return;\n          }\n\n          // Verify user role is teacher, redirect otherwise\n          if (profileData.role !== 'teacher') {\n            console.log('User is not a teacher, redirecting');\n            router.push(`/dashboard/${profileData.role}`);\n          }\n        }\n      } catch (error) {\n        // Only update state and redirect if component is still mounted\n        if (isMounted) {\n          console.error('Error fetching user profile:', error);\n          setIsLoading(false);\n          console.log('Authentication error, redirecting to login');\n          router.push('/login');\n          console.error('Profile fetch failed:', error.message);\n        }\n      }\n    }, 300);\n\n    // Cleanup function to handle unmounting\n    return () => {\n      isMounted = false;\n      clearTimeout(timeoutId);\n    };\n  } else {\n    setIsLoading(false);\n  }\n}, [loading, user, router]); // Removed getUserProfile from dependencies to prevent infinite loop\n  \n  // Show loading spinner when fetching profile\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50 p-4\">\n        <div className=\"w-16 h-16 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mb-4\"></div>\n        <p className=\"text-gray-600 text-lg\">Loading teacher dashboard...</p>\n      </div>\n    );\n  }\n\n  const renderTabContent = () => {\n    switch(activeTab) {\n      case 'overview':\n        return (\n          <div className=\"bg-white rounded-lg shadow-md p-6 w-full\">\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800 border-b pb-2\">Overview</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n              <div className=\"bg-indigo-50 p-4 rounded-lg border border-indigo-200\">\n                <div className=\"flex items-center\">\n                  <div className=\"bg-indigo-500 rounded-full p-3 mr-4\">\n                    <FaBook className=\"text-white text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-700\">Courses</h3>\n                    <p className=\"text-2xl font-bold text-indigo-600\">3</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-amber-50 p-4 rounded-lg border border-amber-200\">\n                <div className=\"flex items-center\">\n                  <div className=\"bg-amber-500 rounded-full p-3 mr-4\">\n                    <FaUsers className=\"text-white text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-700\">Students</h3>\n                    <p className=\"text-2xl font-bold text-amber-600\">42</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-teal-50 p-4 rounded-lg border border-teal-200\">\n                <div className=\"flex items-center\">\n                  <div className=\"bg-teal-500 rounded-full p-3 mr-4\">\n                    <FaClipboardList className=\"text-white text-xl\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-700\">Assignments</h3>\n                    <p className=\"text-2xl font-bold text-teal-600\">12</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <h3 className=\"text-xl font-semibold mb-3 text-gray-700\">Recent Activities</h3>\n            <div className=\"space-y-3\">\n              {[\n                { title: 'New Disaster Preparedness Course Published', time: '1 hour ago', icon: FaBook },\n                { title: 'Graded: Earthquake Safety Assignments', time: 'Yesterday', icon: FaClipboardList },\n                { title: 'Added 5 new students to Flood Management course', time: '2 days ago', icon: FaUsers }\n              ].map((activity, index) => (\n                <div key={index} className=\"flex items-center p-3 bg-gray-50 rounded-md\">\n                  <activity.icon className=\"text-gray-500 mr-3\" />\n                  <div>\n                    <p className=\"font-medium\">{activity.title}</p>\n                    <p className=\"text-sm text-gray-500\">{activity.time}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      case 'courses':\n        return (\n          <div className=\"bg-white rounded-lg shadow-md p-6 w-full\">\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800 border-b pb-2\">My Courses</h2>\n            <div className=\"space-y-4\">\n              {[\n                { title: 'Earthquake Safety and Preparedness', students: 18, progress: 65 },\n                { title: 'Flood Management and Response', students: 15, progress: 42 },\n                { title: 'Fire Safety Protocols', students: 9, progress: 78 }\n              ].map((course, index) => (\n                <div key={index} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h3 className=\"font-semibold text-lg\">{course.title}</h3>\n                    <span className=\"bg-indigo-100 text-indigo-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\n                      {course.students} students\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-indigo-600 h-2.5 rounded-full\" \n                      style={{ width: `${course.progress}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                    <span>Progress</span>\n                    <span>{course.progress}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      case 'students':\n        return (\n          <div className=\"bg-white rounded-lg shadow-md p-6 w-full\">\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800 border-b pb-2\">Students</h2>\n            <p className=\"text-gray-700\">Your student list will appear here.</p>\n          </div>\n        );\n      case 'assignments':\n        return (\n          <div className=\"bg-white rounded-lg shadow-md p-6 w-full\">\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-800 border-b pb-2\">Assignments</h2>\n            <p className=\"text-gray-700\">Your assignments will appear here.</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-50 to-purple-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-700 font-medium\">Loading your dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-indigo-50 to-purple-50 p-4 sm:p-6 lg:p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row gap-6\">\n          {/* Sidebar */}\n          <div className=\"w-full md:w-64 bg-white rounded-lg shadow-md p-4\">\n            <div className=\"flex items-center justify-center flex-col mb-6 pt-2\">\n              {user?.profilePic ? (\n                <img \n                  src={user.profilePic} \n                  alt=\"Profile\" \n                  className=\"w-16 h-16 rounded-full object-cover mb-2\" \n                />\n              ) : (\n                <img \n                  src=\"/uploads/default.png\" \n                  alt=\"Default Profile\" \n                  className=\"w-16 h-16 rounded-full object-cover mb-2\" \n                />\n              )}\n              <h2 className=\"text-xl font-bold text-gray-800\">{user?.name || 'Loading...'}</h2>\n              <p className=\"text-sm text-gray-500\">{user?.email || 'teacher@example.com'}</p>\n            </div>\n            \n            <nav className=\"space-y-1\">\n              {[\n                { name: 'Overview', id: 'overview', icon: FaChalkboardTeacher },\n                { name: 'My Courses', id: 'courses', icon: FaBook },\n                { name: 'Students', id: 'students', icon: FaUsers },\n                { name: 'Assignments', id: 'assignments', icon: FaClipboardList },\n              ].map((item) => (\n                <button\n                  key={item.id}\n                  onClick={() => setActiveTab(item.id)}\n                  className={`flex items-center w-full px-4 py-3 text-left rounded-md transition-colors ${activeTab === item.id ? 'bg-indigo-100 text-indigo-700' : 'hover:bg-gray-100 text-gray-700'}`}\n                >\n                  <item.icon className=\"mr-3\" />\n                  <span className=\"font-medium\">{item.name}</span>\n                </button>\n              ))}\n              \n              {/* Profile and Logout */}\n              <div className=\"pt-4 mt-4 border-t border-gray-200\">\n                <button\n                  onClick={() => router.push('/profile')}\n                  className=\"flex items-center w-full px-4 py-3 text-left rounded-md hover:bg-gray-100 text-gray-700 transition-colors\"\n                >\n                  <FaUserTie className=\"mr-3 text-indigo-500\" />\n                  <span className=\"font-medium\">My Profile</span>\n                </button>\n                \n                <button\n                  onClick={logout}\n                  className=\"flex items-center w-full px-4 py-3 text-left rounded-md hover:bg-red-50 text-red-600 transition-colors mt-2\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                  </svg>\n                  <span className=\"font-medium\">Logout</span>\n                </button>\n              </div>\n            </nav>\n          </div>\n          \n          {/* Main Content */}\n          <div className=\"flex-1\">\n            <div className=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n              <h1 className=\"text-2xl font-bold text-gray-800\">Teacher Dashboard</h1>\n              <p className=\"text-gray-700\">Welcome back, {user?.name || 'Teacher'}! Here's your disaster management teaching overview.</p>\n            </div>\n            \n            {renderTabContent()}\n          </div>\n        </div>\n      </div>\n      \n      {/* Add the diagnostic tool for debugging authentication issues */}\n      <AuthDiagnosticTool />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}