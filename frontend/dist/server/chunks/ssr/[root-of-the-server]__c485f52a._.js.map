{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/context/AuthContext.js"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user from localStorage on initial render\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n\n      const data = await response.json();\n      \n      // Save user to state and localStorage\n      setUser(data);\n      localStorage.setItem('user', JSON.stringify(data));\n      \n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      const formData = new FormData();\n      \n      // Append all user data to formData\n      Object.keys(userData).forEach(key => {\n        formData.append(key, userData[key]);\n      });\n      \n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        // Handle specific error messages from the backend\n        if (data.message === 'User already exists') {\n          throw new Error('A user with this email already exists');\n        } else if (data.message === 'Username already exists') {\n          throw new Error('This username is already taken');\n        } else {\n          throw new Error(data.message || 'Registration failed');\n        }\n      }\n\n      // Save user to state and localStorage\n      setUser(data);\n      localStorage.setItem('user', JSON.stringify(data));\n      \n      return data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    window.location.href = '/';\n  };\n\n  // Determine the API base URL based on environment variables or default to relative path\n  const getApiBaseUrl = () => {\n    // Use environment variable if available\n    if (typeof process !== 'undefined' && process.env.NEXT_PUBLIC_API_URL) {\n      return process.env.NEXT_PUBLIC_API_URL;\n    }\n    // Default to relative path (which will use Next.js API route rewrites)\n    return '';\n  };\n\n  // Check if token is expired and needs refresh\n  const checkTokenValidity = (token) => {\n    if (!token) return false;\n    \n    const validation = validateToken(token);\n    console.log('Token validation result:', validation);\n    return validation.valid;\n  };\n\n  // Refresh the authentication token\n  const refreshToken = async () => {\n    try {\n      if (!user || !user.token) {\n        console.error('No user or refresh token available');\n        return false;\n      }\n\n      console.log('Attempting to refresh token...');\n      const response = await fetch(`${getApiBaseUrl()}/api/auth/refresh`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token: user.token }),\n        credentials: 'include',\n      });\n\n      if (!response.ok) {\n        console.error('Token refresh failed:', response.status);\n        // If refresh fails, log out the user\n        setUser(null);\n        localStorage.removeItem('user');\n        return false;\n      }\n\n      const data = await response.json();\n      \n      // Update user with new token\n      const updatedUser = { ...user, token: data.token };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      console.log('Token refreshed successfully');\n      return true;\n    } catch (error) {\n      console.error('Error refreshing token:', error);\n      return false;\n    }\n  };\n\n  // Get current user profile with improved error handling and token management\n  const getUserProfile = async () => {\n    try {\n      // Check if user is authenticated\n      if (!user || !user.token) {\n        console.error('No authentication token available');\n        throw new Error('Not authenticated');\n      }\n\n      // Log token for debugging (first 10 chars only for security)\n      const tokenPreview = user.token.substring(0, 10) + '...';\n      console.log(`Fetching profile with token: ${tokenPreview}`);\n      \n      // Check if token is valid before making the request\n      if (!checkTokenValidity(user.token)) {\n        console.log('Token appears to be expired, attempting refresh...');\n        const refreshed = await refreshToken();\n        if (!refreshed) {\n          console.error('Token refresh failed, redirecting to login');\n          return null;\n        }\n      }\n\n      // Determine API URL\n      const apiUrl = `${getApiBaseUrl()}/api/users/profile`;\n      console.log(`Making request to: ${apiUrl}`);\n      \n      const response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${user.token}`,\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        // Prevent caching to always get fresh data\n        cache: 'no-store',\n        // Add credentials for cookie-based auth if needed\n        credentials: 'include'\n      });\n\n      // Handle different response statuses\n      if (!response.ok) {\n        // Log response details for debugging\n        console.error('Profile fetch failed:', {\n          status: response.status,\n          statusText: response.statusText\n        });\n        \n        // Handle authentication errors\n        if (response.status === 401) {\n          console.error('Unauthorized: Token rejected by server');\n          // Try to refresh token once\n          const refreshed = await refreshToken();\n          if (!refreshed) {\n            // Clear user data if unauthorized and refresh failed\n            setUser(null);\n            localStorage.removeItem('user');\n            throw new Error('Not authenticated');\n          }\n          // Retry with new token\n          return getUserProfile();\n        }\n        \n        // Try to get error details from response\n        let errorMessage = 'Failed to fetch user profile';\n        try {\n          const errorData = await response.json();\n          errorMessage = errorData.message || errorMessage;\n        } catch (e) {\n          // If parsing JSON fails, use default error message\n        }\n        \n        throw new Error(errorMessage);\n      }\n\n      const data = await response.json();\n      console.log('Profile fetched successfully:', data.name || data.email);\n      \n      // Update user in state and localStorage with latest data\n      const updatedUser = { ...user, ...data };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      \n      return data;\n    } catch (error) {\n      console.error('Get profile error:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        login,\n        register,\n        logout,\n        getUserProfile,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/components/AuthButtons.js"],"sourcesContent":["'use client';\n\nimport { useAuth } from '../context/AuthContext';\nimport { FaUserCircle } from 'react-icons/fa';\n\nexport default function AuthButtons() {\n  const { user, loading, logout } = useAuth();\n  \n  // If loading, show a loading state\n  if (loading) {\n    return (\n      <div className=\"animate-pulse flex space-x-2\">\n        <div className=\"h-8 w-20 bg-gray-200 rounded\"></div>\n        <div className=\"h-8 w-20 bg-gray-200 rounded\"></div>\n      </div>\n    );\n  }\n  \n  // If user is logged in, show profile and logout\n  if (user) {\n    return (\n      <div className=\"flex items-center space-x-3\">\n        <a \n          href=\"/profile\" \n          className=\"flex items-center space-x-2 bg-white text-blue-700 hover:bg-blue-50 font-medium py-2 px-4 rounded-md transition-colors duration-200 shadow-sm\"\n        >\n          {user.profilePic ? (\n            <img \n              src={user.profilePic} \n              alt=\"Profile\" \n              className=\"h-6 w-6 rounded-full object-cover\" \n            />\n          ) : (\n            <FaUserCircle className=\"h-5 w-5\" />\n          )}\n          <span>Profile</span>\n        </a>\n        <a \n          href={user.role === 'student' ? '/dashboard/student' : '/dashboard/teacher'}\n          className=\"bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200 shadow-sm\"\n        >\n          Dashboard\n        </a>\n      </div>\n    );\n  }\n  \n  // Default: show login and register buttons\n  return (\n    <>\n      <a \n        href=\"/login\" \n        className=\"bg-white text-blue-700 hover:bg-blue-50 font-medium py-2 px-4 rounded-md transition-colors duration-200 shadow-sm\"\n      >\n        Sign In\n      </a>\n      <a \n        href=\"/register\" \n        className=\"bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-md transition-colors duration-200 shadow-sm\"\n      >\n        Register\n      </a>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAA,+IAAO;IAEzC,mCAAmC;IACnC,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;;;;;;;IAGrB;IAEA,gDAAgD;IAChD,IAAI,MAAM;QACR,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBACC,MAAK;oBACL,WAAU;;wBAET,KAAK,UAAU,iBACd,8OAAC;4BACC,KAAK,KAAK,UAAU;4BACpB,KAAI;4BACJ,WAAU;;;;;iDAGZ,8OAAC,8JAAY;4BAAC,WAAU;;;;;;sCAE1B,8OAAC;sCAAK;;;;;;;;;;;;8BAER,8OAAC;oBACC,MAAM,KAAK,IAAI,KAAK,YAAY,uBAAuB;oBACvD,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,2CAA2C;IAC3C,qBACE;;0BACE,8OAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;0BAGD,8OAAC;gBACC,MAAK;gBACL,WAAU;0BACX;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Shivansh%20Rana/Desktop/DTU%20Academic/Codes/WEBD/SIH25008/frontend/src/app/components/FooterLinks.js"],"sourcesContent":["'use client';\n\nimport { useAuth } from '../context/AuthContext';\n\nexport default function FooterLinks() {\n  const { user } = useAuth();\n  \n  return (\n    <ul className=\"space-y-2\">\n      <li><a href=\"/\" className=\"text-gray-400 hover:text-white transition-colors\">Home</a></li>\n      {user ? (\n        // Show profile and dashboard links for logged in users\n        <>\n          <li><a href=\"/profile\" className=\"text-gray-400 hover:text-white transition-colors\">Profile</a></li>\n          <li>\n            <a \n              href={user.role === 'student' ? '/dashboard/student' : '/dashboard/teacher'} \n              className=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              Dashboard\n            </a>\n          </li>\n        </>\n      ) : (\n        // Show login and register links for guests\n        <>\n          <li><a href=\"/login\" className=\"text-gray-400 hover:text-white transition-colors\">Login</a></li>\n          <li><a href=\"/register\" className=\"text-gray-400 hover:text-white transition-colors\">Register</a></li>\n        </>\n      )}\n    </ul>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,+IAAO;IAExB,qBACE,8OAAC;QAAG,WAAU;;0BACZ,8OAAC;0BAAG,cAAA,8OAAC;oBAAE,MAAK;oBAAI,WAAU;8BAAmD;;;;;;;;;;;YAC5E,OACC,uDAAuD;0BACvD;;kCACE,8OAAC;kCAAG,cAAA,8OAAC;4BAAE,MAAK;4BAAW,WAAU;sCAAmD;;;;;;;;;;;kCACpF,8OAAC;kCACC,cAAA,8OAAC;4BACC,MAAM,KAAK,IAAI,KAAK,YAAY,uBAAuB;4BACvD,WAAU;sCACX;;;;;;;;;;;;+BAML,2CAA2C;0BAC3C;;kCACE,8OAAC;kCAAG,cAAA,8OAAC;4BAAE,MAAK;4BAAS,WAAU;sCAAmD;;;;;;;;;;;kCAClF,8OAAC;kCAAG,cAAA,8OAAC;4BAAE,MAAK;4BAAY,WAAU;sCAAmD;;;;;;;;;;;;;;;;;;;AAK/F","debugId":null}}]
}